name: CI

on:
  push:
    branches:
      - main
      - flake-update
  workflow_call:
    inputs:
      branch:
        description: Branch name to build on
        default: ''
        required: false
        type: string
    secrets:
      # CACHIX_SIGNING_KEY:
      CACHIX_AUTH_TOKEN:
        required: true

jobs:
  build:
    name: Build Nix configuration for ${{ matrix.system }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        system:
          - aarch64
        nix-command:
          - flake check

        include:
          - nix-command: build .#nixOnDroidConfigurations.device.activationPackage --impure
            system: aarch64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Install nix
        uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            access-tokens = github.com = ${{ secrets.GITHUB_TOKEN }}

      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: actoriu
          # signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build command for ${{ matrix.system }}
        if: matrix.system == 'aarch64'
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          arch: aarch64
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: --volume /nix:/nix
          install: apk --no-cache add curl git xz
          env: |
            _system: ${{ matrix.system }}-linux
          run: |
            set -euo pipefail

            mkdir -p /etc/nix
            echo "max-jobs = auto" >> /etc/nix/nix.conf
            echo "trusted-users = root" >> /etc/nix/nix.conf
            echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
            echo "build-users-group =" >> /etc/nix/nix.conf
            export USER=root

            echo "::group::Install nix"
            sh <(curl -L https://nixos.org/nix/install) --no-channel-add
            . ${HOME}/.nix-profile/etc/profile.d/nix.sh

            echo "::group::Setup cachix"
            nix-env --quiet -j8 -iA cachix -f https://cachix.org/api/v1/install
            cachix use gerschtli
            cachix use nix-on-droid

            echo "::group::Build command"
            nix \
              --log-format bar-with-logs \
              --option keep-going true \
              --show-trace \
              ${{ matrix.nix-command }}
