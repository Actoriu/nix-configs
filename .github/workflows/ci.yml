name: CI

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  get-system:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-system.outputs.system }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
      - name: get the current system
        id: get-system
        run: |
          set -euo pipefail

          system="$(nix eval --raw 'nixpkgs#stdenv.system')"
          echo "::set-output name=system::$system"
  build:
    runs-on: ubuntu-latest
    needs:
      - get-system
    strategy:
      fail-fast: false
      matrix: ${{ (needs.get-system.outputs.system) }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1.2
        if: ${{ matrix.system == 'aarch64-linux' }}
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
      - uses: cachix/cachix-action@v10
        with:
          name: actoriu
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: actoriu,nix-community,nix-on-droid
      - uses: nick-invision/retry@v2
        with:
          max_attempts: 2
          timeout_minutes: 1
          retry_on: error
          command: |
            cachix watch-exec actoriu -- \
            nix run nixpkgs#nix-build-uncached \
            -- \
            -build-flags '--extra-platforms aarch64-linux' \
            build .#nixOnDroidConfigurations.device.activationPackage --impure
